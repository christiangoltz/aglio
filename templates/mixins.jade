include scripts.js

script.
  function copyToClipboardWithoutNewlines(elementId) {
    var aux = document.createElement("input");
    aux.setAttribute("value", document.getElementById(elementId).textContent);
    document.body.appendChild(aux);
    aux.select();
    document.execCommand("copy");
    document.body.removeChild(aux);
  }
  
  function base64Decode(b64string) {
    var buf = Buffer.from(b64string, 'base64');
    return buf.toString();
  }
  
mixin slugify(text)
  .name
    != text
    a.permalink(href=text.toString().toLowerCase().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '')) &para;

mixin Badge(method)
    //- Draw a badge for a given HTTP method
    case method
        when 'GET'
            span.badge.get: i.fa.fa-arrow-down
        when 'HEAD'
            span.badge.head: i.fa.fa-info-circle
        when 'OPTIONS'
            span.badge.options: i.fa.fa-dot-circle-o
        when 'POST'
            span.badge.post: i.fa.fa-plus
        when 'PUT'
            span.badge.put: i.fa.fa-pencil
        when 'PATCH'
            span.badge.patch: i.fa.fa-pencil
        when 'DELETE'
            span.badge.delete: i.fa.fa-times
        default
            span.badge: i.fa.fa-dot-circle-o

mixin Nav()
    //- Draw a navigation bar, which includes links to individual
    //- resources and actions.
    nav
        if self.api.navItems && self.api.navItems.length
            .resource-group
                .heading
                  .chevron
                    i.open.fa.fa-angle-down
                  a(href='#top') Overview
                .collapse-content
                  ul: each item in self.api.navItems
                    li
                      a(href=item[1])!= item[0]
        each resourceGroup in self.api.resourceGroups || []
            .resource-group
                .heading
                  .chevron
                    i.open.fa.fa-angle-down
                  a(href=resourceGroup.elementLink)!= resourceGroup.name || 'Resource Group'
                .collapse-content
                  ul
                    each item in resourceGroup.navItems || []
                      li
                        a(href=item[1])!= item[0]
                    each resource in resourceGroup.resources || []
                      li
                          if !self.condenseNav || (resource.actions.length != 1)
                              a(href=resource.elementLink)!= resource.name || 'Resource'
                              ul: each action in resource.actions || []
                                  li: a(href=action.elementLink)
                                    +Badge(action.method)
                                    != action.name || action.method + ' ' + (action.attributes && action.attributes.uriTemplate || resource.uriTemplate)
                          else
                              - var action = resource.actions[0]
                              a(href=action.elementLink)
                                  +Badge(action.method)
                                  != action.name || resource.name || action.method + ' ' + (action.attributes && action.attributes.uriTemplate || resource.uriTemplate)
        //- Link to the API hostname, e.g. api.yourcompany.com
        each meta in self.api.metadata || {}
            if meta.name == 'HOST'
                p(style="text-align: center; word-wrap: break-word;")
                    a(href=meta.value)= meta.value

mixin Parameters(params)
    //- Draw a definition list of parameter names, types, defaults,
    //- examples and descriptions.
    .title
        strong URI Parameters
        .collapse-button.show
            span.close Hide
            span.open Show
    .collapse-content
        dl.inner: each param in params || []
            dt= self.urldec(param.name)
            dd
                code= param.type || 'string'
                | &nbsp;
                if param.required
                    span.required (required)
                else
                    span (optional)
                | &nbsp;
                if param.default
                    span.text-info.default
                        strong Default:&nbsp;
                        span= param.default
                    | &nbsp;
                if param.example
                    span.text-muted.example
                        strong Example:&nbsp;
                        span= param.example
                != self.markdown(param.description)
                if param.values.length
                    p.choices
                        strong Choices:&nbsp;
                        each value in param.values
                            code= self.urldec(value.value)
                            = ' '

mixin CurlTemplate(request, action, api)
    - var actionName = 'curl-' + action.elementId
    div.curl
      div.command
        pre(id=actionName)
            |curl '#{api.curlHost}
            != action.colorizedUriTemplate
            |'&nbsp;
            if api.curlOptions
                br
                |&nbsp;&nbsp;&nbsp;&nbsp;#{api.curlOptions}
            if action.method != 'GET'
                br
                |&nbsp;&nbsp;&nbsp;&nbsp;--request #{action.method}
            if request.authorization
                br
                if request.authorization.usernamepassword
                    |&nbsp;&nbsp;&nbsp;&nbsp;--user #{request.authorization.usernamepassword}
                else
                    |&nbsp;&nbsp;&nbsp;&nbsp;--header "Authorization: #{request.authorization.raw}"
            each dataStructure in request.content
                if dataStructure.element == 'dataStructure'
                    each content in dataStructure.content
                        +CurlObject(content, '', 0)
      div.copy
          button(onclick='copyToClipboardWithoutNewlines(\'#{actionName}\')') copy curl command

mixin CurlObject(dataStructure, prefix, level)
      if dataStructure.element == 'member'
          if level > 1
              - prefix = prefix + "["
          - prefix = prefix + dataStructure.content.key.content
          if level > 1
              - prefix = prefix + "]"          
          if dataStructure.content.value.element == 'string' || dataStructure.content.value.element == 'number' || dataStructure.content.value.element == 'boolean' || dataStructure.content.value.element == 'enum'
              br
              |&nbsp;&nbsp;&nbsp;&nbsp;--data-urlencode "#{prefix}=
              +Example(dataStructure)
              |"
          else if dataStructure.content.value.element == 'object'
              +CurlObject(dataStructure.content.value, prefix, level + 1)
          else if dataStructure.content.value.element == 'array'
              +CurlObject(dataStructure.content.value, prefix, level + 1)        
          else
              //- - console.log(JSON.stringify(dataStructure.content, null, 2))
              //- - throw 'Could not process element'      
      else if dataStructure.element == 'object'
          each member in dataStructure.content
              +CurlObject(member, prefix, level + 1)
      else if dataStructure.element == 'array'
          each member, index in dataStructure.content
              - arrayPrefix = prefix + "[" + index + "]"
              +CurlObject(member, arrayPrefix, level + 1)
      else if dataStructure.element == 'string' || dataStructure.element == 'number'
          br
          |&nbsp;&nbsp;&nbsp;&nbsp;--data-urlencode "#{prefix}[]=
          !=dataStructure.content
          |"
      else
          - console.log(JSON.stringify(dataStructure, null, 2))
          - throw 'Could not process element'

mixin Attributes(params, contentType, title)
    //- Draw a definition list of attribute names, types, defaults,
    //- examples and descriptions.
    .title
        strong #{title}
        if contentType
            | &nbsp; (#{contentType})
        .collapse-button.show
            span.close Hide
            span.open Show
    .collapse-content
        dl.inner
            each param in params
                +AttributeObject(param, '', 0)

mixin AttributeObject(dataStructure, prefix, level, parent)
      if dataStructure.element == 'member'
          if level > 1
              - prefix = prefix + ".<wbr>"
          - prefix = prefix + dataStructure.content.key.content
          if dataStructure.content.value.element == 'string' || dataStructure.content.value.element == 'number' || dataStructure.content.value.element == 'boolean' || dataStructure.content.value.element == 'enum'
              +AttributeElement(dataStructure, prefix)
          else if dataStructure.content.value.element == 'object'
              +AttributeObject(dataStructure.content.value, prefix, level + 1, dataStructure)
          else if dataStructure.content.value.element == 'array'
              +AttributeObject(dataStructure.content.value, prefix, level + 1, dataStructure)        
          else if dataStructure.content.value.element == 'enum'
              +AttributeElement(dataStructure.content.value, prefix, level + 1, dataStructure)        
          else
              - console.log(JSON.stringify(dataStructure, null, 2))
              - throw 'Could not process element'      
      else if dataStructure.element == 'object'
          +AttributeElement(parent, prefix)          
          each member in dataStructure.content
              +AttributeObject(member, prefix, level + 1, dataStructure)
      else if dataStructure.element == 'array'
          +AttributeElement(parent, prefix)                    
          - arrayPrefix = prefix + "[]"
          +AttributeObject(dataStructure.content[0], arrayPrefix, level + 1, dataStructure)
      else if dataStructure.element == 'string' || dataStructure.element == 'number'
          br
          |#{prefix}[]=
          !=dataStructure.content
      else
          - console.log(JSON.stringify(dataStructure, null, 2))
          - throw 'Could not process element'

mixin AttributeElement(dataStructure, prefix)
    if dataStructure.content.key
        dt
          code!= prefix
        dd
            if dataStructure.content.value
                code= dataStructure.content.value.element || 'string'
                | &nbsp;
            span
                if dataStructure.attributes && dataStructure.attributes.typeAttributes.indexOf('required') > -1
                    span.required (required)
                else
                    span (optional)
            | &nbsp;
            span.text-muted.example
                +ExampleTemplate(dataStructure)
                if dataStructure.content.value.element == 'enum'
                    p.choices
                        strong Choices:&nbsp;
                        each element in dataStructure.content.value.content
                            code= self.urldec(element.content)
                            = ' '
            if dataStructure.meta && dataStructure.meta.description
                !=self.markdown(dataStructure.meta.description)
            else
                p

mixin ExampleTemplate(param)
    if param.content.value && param.content.value.element != 'array' && param.content.value.element != 'object'
        strong Example:&nbsp;
        +Example(param)

mixin Example(param)
    if param.content.value
        if param.content.value.element == 'enum'
            span= param.content.value.content[0].content
        else if param.content.value.element == 'array'
            //- span= '['
            //-     if param.content.value.content
            //-         each value, index in param.content.value.content
            //-             | #{self.urldec(value.element)}
            //-             if index < Object.keys(param.content.value.content).length - 1
            //-                 |,
            //-         |]
        else if param.content.value.element == 'object'
            //- if param.content.value.content
            //-     span
            //-         each member, index in param.content.value.content
            //-             if member.content.value.element == 'string'
            //-                 |[#{member.content.key.content}]=#{member.content.value.content}
            //-                 if index < Object.keys(param.content.value.content).length - 1
            //-                     |,
        else if param.content.value.content
            span= param.content.value.content

mixin RequestResponse(title, request, collapse)
    .title
        strong
            = title
            if request.name
                | &nbsp;&nbsp;
                code= request.name
        if collapse && request.hasContent
            .collapse-button
                span.close Hide
                span.open Show
    +RequestResponseBody(request, collapse)

mixin RequestResponseBody(request, collapse, showBlank, showAttributes)
    if request.hasContent || showBlank
        div(class=collapse ? 'collapse-content' : ''): .inner
            if request.description
                .description!= self.markdown(request.description)

            if Object.keys(request.headers).length
                h5 Headers
                pre: code
                    each item, index in request.headers
                        != self.highlight(item.name + ': ' + item.value, 'http')
                        if index < request.headers.length - 1
                          br
                div(style="height: 1px;")
            if request.body
                h5 Body
                pre: code
                    != self.highlight(request.body, null, ['json', 'yaml', 'xml', 'javascript'])
                div(style="height: 1px;")
            if showAttributes
                if request.content && request.content.length > 0 && request.content[0].element == 'dataStructure' && request.content[0].content
                    +Attributes(request.content[0].content[0].content, null, 'Response Attributes')
            if request.schema
                h5 Schema
                pre: code
                    != self.highlight(request.schema, null, ['json', 'yaml', 'xml'])
                div(style="height: 1px;")
            if !request.hasContent
                .description.text-muted This response has no content.
                div(style="height: 1px;")

mixin Examples(resourceGroup, resource, action)
    each example in action.examples
        each request in example.requests
            +RequestResponse('Request', request, true)
        each response in example.responses
            +RequestResponse('Response', response, true)

mixin Content()
    //- Page header and API description
    header
        h1#top!= self.api.name || 'API Documentation'

    if self.api.descriptionHtml
        != self.api.descriptionHtml

    //- Loop through and display information about all the resource
    //- groups, resources, and actions.
    each resourceGroup in self.api.resourceGroups || []
        section.resource-group(id=resourceGroup.elementId)
            h2.group-heading
                != resourceGroup.name || 'Resource Group'
                = " "
                a.permalink(href=resourceGroup.elementLink) &para;
            if resourceGroup.descriptionHtml
                != resourceGroup.descriptionHtml

            each resource in resourceGroup.resources || []
                .resource(id=resource.elementId)
                    h3.resource-heading
                        != resource.name || ((resource.actions[0] != null) && resource.actions[0].name) || 'Resource'
                        = " "
                        a.permalink(href=resource.elementLink) &nbsp;&para;
                    if resource.description
                        != self.markdown(resource.description)

                    each action in resource.actions || []
                        .action(class=action.methodLower, id=action.elementId)
                            h4.action-heading
                                a.name!= action.name
                                a.method(class=action.methodLower, href=action.elementLink)
                                    = action.method
                                code.uri= self.urldec(action.uriTemplate)
                            if action.description
                                != self.markdown(action.description)

                            h4 Example URI
                            .definition
                                span.method(class=action.methodLower)= action.method
                                | &nbsp;
                                span.uri
                                  span.hostname= self.api.host
                                  != action.colorizedUriTemplate

                            //- A list of sub-sections for parameters, requests
                            //- and responses.
                            if action.parameters.length
                                +Parameters(action.parameters)
                            if action.examples
                                +Examples(resourceGroup, resource, action)

mixin ContentTriple()
    .middle
        //- Page header and API description
        header
            h1#top!= self.api.name || 'API Documentation'

    .right
        span API Endpoint:&nbsp;
        a(href=self.api.host)= self.api.host
    .middle
        if self.api.descriptionHtml
            != self.api.descriptionHtml

    //- Loop through and display information about all the resource
    //- groups, resources, and actions.
    each resourceGroup in self.api.resourceGroups || []
        .middle
            section.resource-group(id=resourceGroup.elementId)
                h2.group-heading
                    != resourceGroup.name || 'Resource Group'
                    = " "
                    a.permalink(href=resourceGroup.elementLink) &para;
                if resourceGroup.descriptionHtml
                    != resourceGroup.descriptionHtml

        each resource in resourceGroup.resources || []
            .middle
                .resource(id=resource.elementId)
                    h3.resource-heading
                        != resource.name || ((resource.actions[0] != null) && resource.actions[0].name) || 'Resource'
                        = " "
                        a.permalink(href=resource.elementLink) &para;
                    if resource.description
                        != self.markdown(resource.description)
            each dataStructure in resource.content
                if dataStructure.element == 'dataStructure' 
                    each object in dataStructure.content
                        if object.element == 'object'
                            .middle
                                .action
                                    +Attributes(object.content, null, 'Resource Model')
            each action in resource.actions || []
                if action.examples
                    .right
                      .definition
                      if action.hasRequest
                          h4 Example Request
                          .tabs
                              .tab-names
                                  if action.examples.length > 1
                                      - var requestCount = 0
                                      each example in action.examples
                                          each request in example.requests
                                              - requestCount++
                                              span.tab-button= request.name || 'example ' + requestCount
                              each example in action.examples
                                  each request in example.requests
                                      .tab
                                          .tabs
                                              .tab-names
                                                  span.tab-button
                                                      |curl
                                                  span.tab-button
                                                      |details
                                              .tab
                                                  +CurlTemplate(request, action, self.api)
                                              .tab
                                                  +RequestResponseBody(request, false, true, false)
                                              h4 Example Response
                                              .tabs
                                                  .tab-names
                                                      each response in example.responses
                                                          span.tab-button= response.name
                                                  each response in example.responses
                                                      .tab
                                                          +RequestResponseBody(response, false, true, true)
                      else
                          .tabs
                            each example in action.examples
                                .tabs
                                    .tab-names
                                        span Responses
                                        each response in example.responses
                                            span.tab-button= response.name
                                    each response in example.responses
                                        .tab
                                            +RequestResponseBody(response, false, true)
                .middle
                    .action(class=action.methodLower, id=action.elementId)
                        h4.action-heading
                            +slugify(action.name)
                            a.method(class=action.methodLower, href=action.elementLink)
                                = action.method
                            code.uri= self.urldec(action.uriTemplate)
                        if action.description
                            != self.markdown(action.description)

                        if action.attributes.length
                            +Attributes(action.attributes, action.request.contentType, 'Request Attributes')

                        //- A list of sub-sections for parameters, requests
                        //- and responses.
                        if action.parameters.length
                            +Parameters(action.parameters)

                hr.split
